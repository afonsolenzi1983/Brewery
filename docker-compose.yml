x-airflow-common: &airflow-common
  #image: apache/airflow:2.9.3 #if necessary to use standard image instead
  build: .  # <-- execute the dockerfile
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    _PIP_ADDITIONAL_REQUIREMENTS: "apache-airflow-providers-apache-spark==4.1.2"
    JAVA_HOME: /usr/lib/jvm/default-java  # <-- ADD THIS LINE
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-50000}"
  networks:
    - app-network
  depends_on:
    postgres:
      condition: service_healthy

services:

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio-data-volume:/data
    networks:
      - app-network
    restart: always

  spark-master:
    image: bitnami/spark:3.5
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - JAVA_HOME=/opt/bitnami/java  # <-- FIX 1: Added JAVA_HOME
    ports:
      - "8081:8080"
      - "7077:7077"
    volumes:
      - ./spark/apps:/opt/bitnami/spark/app # <-- FIX 2: Corrected path from 'apps' to 'app'
      - ./spark/data:/opt/bitnami/spark/data
    networks:
      - app-network
    restart: always

  spark-worker:
    image: bitnami/spark:3.5
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - JAVA_HOME=/opt/bitnami/java # <-- FIX 1: Added JAVA_HOME
    volumes:
      - ./spark/apps:/opt/bitnami/spark/app # <-- FIX 2: Corrected path from 'apps' to 'app'
      - ./spark/data:/opt/bitnami/spark/data
    depends_on:
      - spark-master
    networks:
      - app-network
    restart: always

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - >
        airflow db upgrade &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: webserver
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 20s
      retries: 10
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname \"$${HOSTNAME}\""]
      interval: 30s
      timeout: 20s
      retries: 10
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    restart: always

volumes:
  postgres-db-volume:
  minio-data-volume:

networks:
  app-network:
    name: app-network
    driver: bridge